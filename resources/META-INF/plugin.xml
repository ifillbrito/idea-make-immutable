<idea-plugin>
    <id>com.ifillbrito.immutable</id>
    <name>Make Immutable</name>
    <version>0.2</version>
    <vendor email="grebiel.ifillbrito@gmail.com" url="https://github.com/ifillbrito">Grebiel Ifill Brito</vendor>

    <description><![CDATA[
      This plugin makes a class immutable by applying the following changes:<br>
      <ul>
        <li>Class modifier "final" added if not present.</li>
        <li>Fields modifier "final" added if not present.</li>
        <li>Constructor/s visibility changed to private.</li>
        <li>Generation of static constructor/s (method name: "of") for each private constructor.</li>
        <li>Generation of getters</li>
        <li>Generation of withers (withXYZ methods). This methods allow creating a new immutable object based on the current one.</li>
      </ul>
    ]]></description>

    <change-notes><![CDATA[
      Versin 0.2:
      <ul>
          <li>Bug fix: static no argument constructor is generated correctly.</li>
          <li>Support for multiple static constructors added. The static constructors are generated based on existing constructors.</li>
          <li>Support for parameterized classes added.</li>
          <li>Generation of existing methods is skipped.</li>
      </ul>
      Version 0.1:
      <ul>
          <li>First Release</li>
      </ul>
    ]]>
    </change-notes>

    <idea-version since-build="173.0"/>

    <extensions defaultExtensionNs="com.intellij">
    </extensions>

    <actions>
        <action id="MakeImmutable" class="com.ifillbrito.idea.immutable.MakeImmutableAction" text="Make Immutable"
                description="Makes the class immutable">
            <add-to-group group-id="JavaGenerateGroup1" anchor="before" relative-to-action="GenerateConstructor"/>
        </action>
    </actions>

</idea-plugin>